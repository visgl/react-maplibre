"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[6917],{8863:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(4848),n=t(8453);const i={},s="Adding Custom Data",o={id:"get-started/adding-custom-data",title:"Adding Custom Data",description:"Native Mapblibre Layers",source:"@site/../docs/get-started/adding-custom-data.md",sourceDirName:"get-started",slug:"/get-started/adding-custom-data",permalink:"/react-maplibre/docs/get-started/adding-custom-data",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/react-maplibre/tree/master/docs/../docs/get-started/adding-custom-data.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"State Management",permalink:"/react-maplibre/docs/get-started/state-management"},next:{title:"default (Map)",permalink:"/react-maplibre/docs/api-reference/map"}},l={},c=[{value:"Native Mapblibre Layers",id:"native-mapblibre-layers",level:2},{value:"Custom Overlays",id:"custom-overlays",level:2},{value:"Other vis.gl Libraries",id:"other-visgl-libraries",level:2}];function d(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"adding-custom-data",children:"Adding Custom Data"})}),"\n",(0,r.jsx)(a.h2,{id:"native-mapblibre-layers",children:"Native Mapblibre Layers"}),"\n",(0,r.jsxs)(a.p,{children:["You can inject data and Maplibre native layers using the ",(0,r.jsx)(a.a,{href:"/react-maplibre/docs/api-reference/source",children:"Source"})," and ",(0,r.jsx)(a.a,{href:"/react-maplibre/docs/api-reference/layer",children:"Layer"})," components:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-tsx",children:"import * as React from 'react';\nimport {Map, Source, Layer} from '@vis.gl/react-maplibre';\nimport type {CircleLayer} from '@vis.gl/react-maplibre';\nimport type {FeatureCollection} from 'geojson';\n\nconst geojson: FeatureCollection = {\n  type: 'FeatureCollection',\n  features: [\n    {type: 'Feature', geometry: {type: 'Point', coordinates: [-122.4, 37.8]}}\n  ]\n};\n\nconst layerStyle: CircleLayer = {\n  id: 'point',\n  type: 'circle',\n  paint: {\n    'circle-radius': 10,\n    'circle-color': '#007cbf'\n  }\n};\n\nfunction App() {\n  return (\n    <Map\n      initialViewState={{\n        longitude: -122.45,\n        latitude: 37.78,\n        zoom: 14\n      }}>\n      <Source id=\"my-data\" type=\"geojson\" data={geojson}>\n        <Layer {...layerStyle} />\n      </Source>\n    </Map>\n  );\n}\n"})}),"\n",(0,r.jsxs)(a.p,{children:["For details about data sources and layer configuration, check out the ",(0,r.jsx)(a.a,{href:"https://maplibre.org/maplibre-style-spec/",children:"Maplibre style specification"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["For dynamically updating data sources and layers, check out the ",(0,r.jsx)(a.a,{href:"http://visgl.github.io/react-maplibre/examples/geojson",children:"GeoJSON"})," and ",(0,r.jsx)(a.a,{href:"http://visgl.github.io/react-maplibre/examples/geojson-animation",children:"GeoJSON animation"})," examples."]}),"\n",(0,r.jsx)(a.h2,{id:"custom-overlays",children:"Custom Overlays"}),"\n",(0,r.jsxs)(a.p,{children:["You can implement a custom HTML or SVG overlay on top of the map that redraws whenever the camera changes. By calling ",(0,r.jsx)(a.code,{children:"map.project()"})," you can adjust the DOM or CSS properties so that the customly-drawn features are always aligned with the map. See a full example ",(0,r.jsx)(a.a,{href:"https://github.com/visgl/react-maplibre/tree/1.0-release/examples/custom-overlay",children:"here"}),"."]}),"\n",(0,r.jsx)(a.h2,{id:"other-visgl-libraries",children:"Other vis.gl Libraries"}),"\n",(0,r.jsxs)(a.p,{children:["For more feature rich and performant data visualization overlay use cases, you may consider using other visualization libraries. ",(0,r.jsx)(a.code,{children:"react-maplibre"})," is part of the ",(0,r.jsx)(a.a,{href:"https://www.github.com/visgl",children:"vis.gl"})," ecosystem, a suite of high-performance data visualization tools for the Web."]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://deck.gl",children:"deck.gl"})," - WebGL-powered framework for the visualization of large datasets."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://loaders.gl",children:"loaders.gl"})," - loaders for file formats focused on visualization of big data, including point clouds, 3D geometries, images, geospatial formats as well as tabular data."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"https://nebula.gl",children:"nebula.gl"})," - 3D-enabled GeoJSON editing based on deck.gl and React."]}),"\n"]})]})}function p(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>s,x:()=>o});var r=t(6540);const n={},i=r.createContext(n);function s(e){const a=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:a},e.children)}}}]);